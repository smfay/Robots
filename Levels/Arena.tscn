[gd_scene load_steps=11 format=2]

[ext_resource path="res://TileMap.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/sundae48-1x.png" type="Texture" id=2]
[ext_resource path="res://Enemies/BigGreen.tscn" type="PackedScene" id=3]
[ext_resource path="res://Sprites/background_clouds.png" type="Texture" id=7]
[ext_resource path="res://Sprites/background_buildings.png" type="Texture" id=8]

[sub_resource type="World" id=7]

[sub_resource type="Shader" id=1]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform bool enable_scanlines = false;
uniform float screen_height = 640.0;
uniform float screen_width = 640.0;
uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	
	if (enable_scanlines)
	{
		COLOR = mix(vec4(0.0), COLOR, float(int(UV.y * screen_height) % 2));
		COLOR = mix(vec4(0.0), COLOR, float(int(UV.x * screen_width) % 2));
	}

}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/enable_scanlines = false
shader_param/screen_height = 720.0
shader_param/screen_width = 720.0
shader_param/amplitude = -0.051
shader_param/frequency = 8.747
shader_param/speed = 0.074
shader_param/amplitude_vertical = 0.054
shader_param/frequency_vertical = 3.628
shader_param/speed_vertical = 0.208
shader_param/scroll_direction = Vector2( 1, 0 )
shader_param/scrolling_speed = 0.007
shader_param/enable_palette_cycling = true
shader_param/palette_speed = 0.0
shader_param/palette = ExtResource( 2 )

[sub_resource type="OpenSimplexNoise" id=5]
octaves = 9
period = 76.3
persistence = 1.0

[sub_resource type="NoiseTexture" id=6]
width = 1000
height = 360
seamless = true
noise = SubResource( 5 )

[node name="Arena" type="Node2D"]
pause_mode = 1

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
modulate = Color( 0, 0, 0, 1 )
margin_left = -1301.0
margin_top = -491.0
margin_right = 1049.0
margin_bottom = 807.0
color = Color( 0, 0, 0, 1 )

[node name="CloudBG" type="ParallaxBackground" parent="."]
pause_mode = 1
layer = -5
visible = false

[node name="ParallaxLayer4" type="ParallaxLayer" parent="CloudBG"]
position = Vector2( 0, 391 )
motion_scale = Vector2( 0.1, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="ViewportContainer" type="ViewportContainer" parent="CloudBG/ParallaxLayer4"]
margin_left = -604.0
margin_top = -694.0
margin_right = 602.0
margin_bottom = -49.0
stretch = true

[node name="Viewport" type="Viewport" parent="CloudBG/ParallaxLayer4/ViewportContainer"]
size = Vector2( 1206, 645 )
world = SubResource( 7 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 0

[node name="BG" type="TextureRect" parent="CloudBG/ParallaxLayer4/ViewportContainer/Viewport"]
self_modulate = Color( 0, 0, 0, 1 )
material = SubResource( 2 )
margin_left = -1228.0
margin_top = -183.0
margin_right = 4772.0
margin_bottom = 3817.0
texture = SubResource( 6 )
expand = true
stretch_mode = 2

[node name="ParallaxLayer" type="ParallaxLayer" parent="CloudBG"]
visible = false
modulate = Color( 0.733333, 0, 0, 1 )
position = Vector2( 0, 271 )
motion_scale = Vector2( 0.2, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="CloudBG/ParallaxLayer"]
texture = ExtResource( 7 )
region_enabled = true
region_rect = Rect2( 320, 180, 3200, 180 )

[node name="ParallaxLayer2" type="ParallaxLayer" parent="CloudBG"]
visible = false
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 0, 378 )
motion_scale = Vector2( 0.3, 1 )
motion_offset = Vector2( 100, 0 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="CloudBG/ParallaxLayer2"]
position = Vector2( 0, -131 )
texture = ExtResource( 8 )
region_enabled = true
region_rect = Rect2( 640, 180, 6400, 180 )

[node name="ParallaxLayer3" type="ParallaxLayer" parent="CloudBG"]
visible = false
position = Vector2( 0, 391 )
motion_scale = Vector2( 0.4, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="CloudBG/ParallaxLayer3"]
position = Vector2( 0, -134 )
texture = ExtResource( 8 )
region_enabled = true
region_rect = Rect2( 640, 180, 6400, 180 )

[node name="TileMap" parent="." instance=ExtResource( 1 )]
tile_data = PoolIntArray( 589827, 0, 327680, 720883, 0, 327680, 720884, 0, 327681, 655363, 0, 393216, 786417, 0, 327681, 786419, 0, 393216, 786420, 0, 262146, 786421, 0, 327681, 720897, 0, 327681, 720898, 0, 327680, 720899, 0, 262146, 851953, 0, 262146, 851954, 0, 327681, 851955, 0, 262146, 851956, 0, 327682, 851957, 0, 262146, 786433, 0, 262146, 786434, 0, 393216, 786435, 0, 327682, 786436, 0, 327681, 917489, 0, 393218, 917490, 0, 393217, 917491, 0, 393218, 917492, 0, 393218, 917493, 0, 393218, 917494, 0, 917504, 917495, 0, 917504, 917496, 0, 917504, 917497, 0, 917504, 917498, 0, 917504, 917499, 0, 917504, 917500, 0, 917504, 917501, 0, 917504, 917502, 0, 917504, 917503, 0, 917504, 851968, 0, 917504, 851969, 0, 393218, 851970, 0, 393217, 851971, 0, 393218, 851972, 0, 393217, 983024, 0, 983040, 983025, 0, 983040, 983026, 0, 983040, 983027, 0, 983040, 983028, 0, 983040, 983029, 0, 983040, 983030, 0, 983040, 983031, 0, 983040, 983032, 0, 983040, 983033, 0, 983040, 983034, 0, 983040, 983035, 0, 983040, 983036, 0, 983040, 983037, 0, 983040, 983038, 0, 983040, 983039, 0, 983040, 917504, 0, 983040, 917505, 0, 983040, 917506, 0, 983040, 917507, 0, 983040, 917508, 0, 983040, 917509, 0, 983040, 1048560, 0, 786432, 1048561, 0, 786432, 1048562, 0, 786432, 1048563, 0, 786432, 1048564, 0, 786432, 1048565, 0, 786432, 1048566, 0, 786432, 1048567, 0, 786432, 1048568, 0, 786432, 1048569, 0, 786432, 1048570, 0, 786432, 1048571, 0, 786432, 1048572, 0, 786432, 1048573, 0, 786432, 1048574, 0, 786432, 1048575, 0, 786432, 983040, 0, 786432, 983041, 0, 786432, 983042, 0, 786432, 983043, 0, 786432, 983044, 0, 786432, 983045, 0, 786432, 1114096, 0, 786432, 1114097, 0, 786432, 1114098, 0, 786432, 1114099, 0, 786432, 1114100, 0, 786432, 1114101, 0, 786432, 1114102, 0, 786432, 1114103, 0, 786432, 1114104, 0, 786432, 1114105, 0, 786432, 1114106, 0, 786432, 1114107, 0, 786432, 1114108, 0, 786432, 1114109, 0, 786432, 1114110, 0, 786432, 1114111, 0, 786432, 1048576, 0, 786432, 1048577, 0, 786432, 1048578, 0, 786432, 1048579, 0, 786432, 1048580, 0, 786432, 1048581, 0, 786432, 1179632, 0, 786432, 1179633, 0, 786432, 1179634, 0, 786432, 1179635, 0, 786432, 1179636, 0, 786432, 1179637, 0, 786432, 1179638, 0, 786432, 1179639, 0, 786432, 1179640, 0, 786432, 1179641, 0, 786432, 1179642, 0, 786432, 1179643, 0, 786432, 1179644, 0, 786432, 1179645, 0, 786432, 1179646, 0, 786432, 1179647, 0, 786432, 1114112, 0, 786432, 1114113, 0, 786432, 1114114, 0, 786432, 1114115, 0, 786432, 1114116, 0, 786432, 1114117, 0, 786432, 1245168, 0, 786432, 1245169, 0, 786432, 1245170, 0, 786432, 1245171, 0, 786432, 1245172, 0, 786432, 1245173, 0, 786432, 1245174, 0, 786432, 1245175, 0, 786432, 1245176, 0, 786432, 1245177, 0, 786432, 1245178, 0, 786432, 1245179, 0, 786432, 1245180, 0, 786432, 1245181, 0, 786432, 1245182, 0, 786432, 1245183, 0, 786432, 1179648, 0, 786432, 1179649, 0, 786432, 1179650, 0, 786432, 1179651, 0, 786432, 1179652, 0, 786432, 1179653, 0, 786432, 1310704, 0, 786432, 1310705, 0, 786432, 1310706, 0, 786432, 1310707, 0, 786432, 1310708, 0, 786432, 1310709, 0, 786432, 1310710, 0, 786432, 1310711, 0, 786432, 1310712, 0, 786432, 1310713, 0, 786432, 1310714, 0, 786432, 1310715, 0, 786432, 1310716, 0, 786432, 1310717, 0, 786432, 1310718, 0, 786432, 1310719, 0, 786432, 1245184, 0, 786432, 1245185, 0, 786432, 1245186, 0, 786432, 1245187, 0, 786432, 1245188, 0, 786432, 1245189, 0, 786432, 1376240, 0, 786432, 1376241, 0, 786432, 1376242, 0, 786432, 1376243, 0, 786432, 1376244, 0, 786432, 1376245, 0, 786432, 1376246, 0, 786432, 1376247, 0, 786432, 1376248, 0, 786432, 1376249, 0, 786432, 1376250, 0, 786432, 1376251, 0, 786432, 1376252, 0, 786432, 1376253, 0, 786432, 1376254, 0, 786432, 1376255, 0, 786432, 1310720, 0, 786432, 1310721, 0, 786432, 1310722, 0, 786432, 1310723, 0, 786432, 1310724, 0, 786432, 1310725, 0, 786432, 1441776, 0, 786432, 1441777, 0, 786432, 1441778, 0, 786432, 1441779, 0, 786432, 1441780, 0, 786432, 1441781, 0, 786432, 1441782, 0, 786432, 1441783, 0, 786432, 1441784, 0, 786432, 1441785, 0, 786432, 1441786, 0, 786432, 1441787, 0, 786432, 1441788, 0, 786432, 1441789, 0, 786432, 1441790, 0, 786432, 1441791, 0, 786432, 1376256, 0, 786432, 1376257, 0, 786432, 1376258, 0, 786432, 1376259, 0, 786432, 1376260, 0, 786432, 1376261, 0, 786432, 1507312, 0, 786432, 1507313, 0, 786432, 1507314, 0, 786432, 1507315, 0, 786432, 1507316, 0, 786432, 1507317, 0, 786432, 1507318, 0, 786432, 1507319, 0, 786432, 1507320, 0, 786432, 1507321, 0, 786432, 1507322, 0, 786432, 1507323, 0, 786432, 1507324, 0, 786432, 1507325, 0, 786432, 1507326, 0, 786432, 1507327, 0, 786432, 1441792, 0, 786432, 1441793, 0, 786432, 1441794, 0, 786432, 1441795, 0, 786432, 1441796, 0, 786432, 1441797, 0, 786432, 1572848, 0, 786432, 1572849, 0, 786432, 1572850, 0, 786432, 1572851, 0, 786432, 1572852, 0, 786432, 1572853, 0, 786432, 1572854, 0, 786432, 1572855, 0, 786432, 1572856, 0, 786432, 1572857, 0, 786432, 1572858, 0, 786432, 1572859, 0, 786432, 1572860, 0, 786432, 1572861, 0, 786432, 1572862, 0, 786432, 1572863, 0, 786432, 1507328, 0, 786432, 1507329, 0, 786432, 1507330, 0, 786432, 1507331, 0, 786432, 1507332, 0, 786432, 1507333, 0, 786432, 1638384, 0, 786432, 1638385, 0, 786432, 1638386, 0, 786432, 1638387, 0, 786432, 1638388, 0, 786432, 1638389, 0, 786432, 1638390, 0, 786432, 1638391, 0, 786432, 1638392, 0, 786432, 1638393, 0, 786432, 1638394, 0, 786432, 1638395, 0, 786432, 1638396, 0, 786432, 1638397, 0, 786432, 1638398, 0, 786432, 1638399, 0, 786432, 1572864, 0, 786432, 1572865, 0, 786432, 1572866, 0, 786432, 1572867, 0, 786432, 1572868, 0, 786432, 1572869, 0, 786432, 1703920, 0, 786432, 1703921, 0, 786432, 1703922, 0, 786432, 1703923, 0, 786432, 1703924, 0, 786432, 1703925, 0, 786432, 1703926, 0, 786432, 1703927, 0, 786432, 1703928, 0, 786432, 1703929, 0, 786432, 1703930, 0, 786432, 1703931, 0, 786432, 1703932, 0, 786432, 1703933, 0, 786432, 1703934, 0, 786432, 1703935, 0, 786432, 1638400, 0, 786432, 1638401, 0, 786432, 1638402, 0, 786432, 1638403, 0, 786432, 1638404, 0, 786432, 1638405, 0, 786432, 1769456, 0, 786432, 1769457, 0, 786432, 1769458, 0, 786432, 1769459, 0, 786432, 1769460, 0, 786432, 1769461, 0, 786432, 1769462, 0, 786432, 1769463, 0, 786432, 1769464, 0, 786432, 1769465, 0, 786432, 1769466, 0, 786432, 1769467, 0, 786432, 1769468, 0, 786432, 1769469, 0, 786432, 1769470, 0, 786432, 1769471, 0, 786432, 1703936, 0, 786432, 1703937, 0, 786432, 1703938, 0, 786432, 1703939, 0, 786432, 1703940, 0, 786432, 1703941, 0, 786432, 1834992, 0, 786432, 1834993, 0, 786432, 1834994, 0, 786432, 1834995, 0, 786432, 1834996, 0, 786432, 1834997, 0, 786432, 1834998, 0, 786432, 1834999, 0, 786432, 1835000, 0, 786432, 1835001, 0, 786432, 1835002, 0, 786432, 1835003, 0, 786432, 1835004, 0, 786432, 1835005, 0, 786432, 1835006, 0, 786432, 1835007, 0, 786432, 1769472, 0, 786432, 1769473, 0, 786432, 1769474, 0, 786432, 1769475, 0, 786432, 1769476, 0, 786432, 1769477, 0, 786432, 1900528, 0, 786432, 1900529, 0, 786432, 1900530, 0, 786432, 1900531, 0, 786432, 1900532, 0, 786432, 1900533, 0, 786432, 1900534, 0, 786432, 1900535, 0, 786432, 1900536, 0, 786432, 1900537, 0, 786432, 1900538, 0, 786432, 1900539, 0, 786432, 1900540, 0, 786432, 1900541, 0, 786432, 1900542, 0, 786432, 1900543, 0, 786432, 1835008, 0, 786432, 1835009, 0, 786432, 1835010, 0, 786432, 1835011, 0, 786432, 1835012, 0, 786432, 1835013, 0, 786432, 1966064, 0, 786432, 1966065, 0, 786432, 1966066, 0, 786432, 1966067, 0, 786432, 1966068, 0, 786432, 1966069, 0, 786432, 1966070, 0, 786432, 1966071, 0, 786432, 1966072, 0, 786432, 1966073, 0, 786432, 1966074, 0, 786432, 1966075, 0, 786432, 1966076, 0, 786432, 1966077, 0, 786432, 1966078, 0, 786432, 1966079, 0, 786432, 1900544, 0, 786432, 1900545, 0, 786432, 1900546, 0, 786432, 1900547, 0, 786432, 1900548, 0, 786432, 1900549, 0, 786432, 2031600, 0, 786432, 2031601, 0, 786432, 2031602, 0, 786432, 2031603, 0, 786432, 2031604, 0, 786432, 2031605, 0, 786432, 2031606, 0, 786432, 2031607, 0, 786432, 2031608, 0, 786432, 2031609, 0, 786432, 2031610, 0, 786432, 2031611, 0, 786432, 2031612, 0, 786432, 2031613, 0, 786432, 2031614, 0, 786432, 2031615, 0, 786432, 1966080, 0, 786432, 1966081, 0, 786432, 1966082, 0, 786432, 1966083, 0, 786432, 1966084, 0, 786432, 1966085, 0, 786432 )

[node name="Doors" type="Node" parent="."]

[node name="NPCs" type="Node" parent="."]

[node name="Objects" type="Node" parent="."]

[node name="BigGreen" parent="." instance=ExtResource( 3 )]
modulate = Color( 0, 0.298039, 1, 1 )
position = Vector2( -168, 248 )
move_speed = 200
jump_time_to_peak = 0.5
jump_time_to_descent = 0.4
knockback_factor = 0.6
knockback_decay = 0.8
hitstun_pause_factor = 0.01
knockback_max_bounces = 20
short_attack_range = 200.0
